[{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://cidree.github.io/silviculture/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://cidree.github.io/silviculture/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrián Cidre González. Author, maintainer. Aitor Vázquez Veloso. Author.","code":""},{"path":"https://cidree.github.io/silviculture/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cidre-González, . (2025). silviculture: R package silviculture. R package version 0.1.0. https://github.com/Cidree/silviculture","code":"@Manual{,   title = {silviculture: R package silviculture},   author = {Adrián Cidre-González},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/Cidree/silviculture}, }"},{"path":"https://cidree.github.io/silviculture/index.html","id":"silviculture-","dir":"","previous_headings":"","what":"Utility Functions for Forest Inventory and Silviculture","title":"Utility Functions for Forest Inventory and Silviculture","text":"silviculture R package designed streamline analysis forestry forest inventory data, offering range functions common silvicultural analysis. aims support forest management research providing flexible toolkit data manipulation summary.","code":""},{"path":"https://cidree.github.io/silviculture/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility Functions for Forest Inventory and Silviculture","text":"can install development version silviculture GitHub :","code":"# install.packages(\"pak\") pak::pak(\"Cidree/silviculture\")"},{"path":"https://cidree.github.io/silviculture/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Utility Functions for Forest Inventory and Silviculture","text":"package currently active development may still contain bugs unstable features. recommend using real-world applications stage, may prone errors.","code":""},{"path":"https://cidree.github.io/silviculture/index.html","id":"nomenclature","dir":"","previous_headings":"","what":"Nomenclature","title":"Utility Functions for Forest Inventory and Silviculture","text":"package uses following terms function arguments consistently: biomass: mass tree part tree kilograms. dclass: diametric class tree. forestry typically work diametric classes instead raw diameters. Therefore, often create diametric classes range 5 10 centimeters. diameter: diameter tree, typically refering diameter breast height (1.30 meters) expressed centimeters. h0 (dominant height): mean height 100 thickest trees per hectare (Assman); mean height 100 tallest trees per hectare (Hart). g (basal area): basal area tree, typically expressed symbol G. expressed squared meters per hectare ( m2/ha). height: refers total height tree meters. Lorey's height: tree’s mean height weighted basal area. ntrees: number trees (typically diameter). species: Latin name tree species (e.g. Pinus pinaster). volume: estimated volume tree cubic meters (m3).","code":""},{"path":"https://cidree.github.io/silviculture/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Utility Functions for Forest Inventory and Silviculture","text":"Contributions silviculture highly appreciated! ideas improvements new features, feel free : Open issue bugs feature requests. Submit pull request code contributions. Share feedback usage, examples, additional functionality.","code":""},{"path":"https://cidree.github.io/silviculture/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Utility Functions for Forest Inventory and Silviculture","text":"project licensed GPL-3 License.","code":""},{"path":"https://cidree.github.io/silviculture/reference/biomass_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass models — biomass_models","title":"Biomass models — biomass_models","text":"Biomass models available silviculture package. like suggest new models, please open new issue.","code":""},{"path":"https://cidree.github.io/silviculture/reference/biomass_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass models — biomass_models","text":"","code":"biomass_models"},{"path":"https://cidree.github.io/silviculture/reference/biomass_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Biomass models — biomass_models","text":"tibble","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_accumulated_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of trees until reaching a maximum number of trees — calc_accumulated_trees","title":"Calculates number of trees until reaching a maximum number of trees — calc_accumulated_trees","text":"Calculates number trees reaching maximum number trees","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_accumulated_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of trees until reaching a maximum number of trees — calc_accumulated_trees","text":"","code":"calc_accumulated_trees(ntrees, cumtrees, max_trees)"},{"path":"https://cidree.github.io/silviculture/reference/calc_accumulated_trees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of trees until reaching a maximum number of trees — calc_accumulated_trees","text":"ntrees Number trees per hectare cumtrees Accumulated trees sorted thickest thinner diameter max_trees Number trees calculate dominant metric","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_accumulated_trees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of trees until reaching a maximum number of trees — calc_accumulated_trees","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_dominant_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates dominant height or dominant diameter — calc_dominant_metric","title":"Calculates dominant height or dominant diameter — calc_dominant_metric","text":"Calculates dominant height dominant diameter","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_dominant_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates dominant height or dominant diameter — calc_dominant_metric","text":"","code":"calc_dominant_metric(nmax, ntress, metric, max_trees = 100)"},{"path":"https://cidree.github.io/silviculture/reference/calc_dominant_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates dominant height or dominant diameter — calc_dominant_metric","text":"nmax Index first diametric class > 100 trees; 100 trees, index maximum ntress Number trees per hectare metric Height diametric class diameter max_trees Number trees calculate dominant metric","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_dominant_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates dominant height or dominant diameter — calc_dominant_metric","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of plots for optimal allocation with variable cost — calc_n_cost","title":"Calculates number of plots for optimal allocation with variable cost — calc_n_cost","text":"Calculates number plots optimal allocation variable cost","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of plots for optimal allocation with variable cost — calc_n_cost","text":"","code":"calc_n_cost(students_t, pj, sj, cost, max_n, max_error)"},{"path":"https://cidree.github.io/silviculture/reference/calc_n_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of plots for optimal allocation with variable cost — calc_n_cost","text":"students_t Student's T value pj proportion stratum sj variance stratum cost cost stratum max_n maximum number plots area max_error maximum allowed absolute error","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of plots for optimal allocation with variable cost — calc_n_cost","text":"length-one numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_optimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of plots for optimal allocation with constant cost — calc_n_optimal","title":"Calculates number of plots for optimal allocation with constant cost — calc_n_optimal","text":"Calculates number plots optimal allocation constant cost","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_optimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of plots for optimal allocation with constant cost — calc_n_optimal","text":"","code":"calc_n_optimal(students_t, pj, sj, max_n, max_error)"},{"path":"https://cidree.github.io/silviculture/reference/calc_n_optimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of plots for optimal allocation with constant cost — calc_n_optimal","text":"students_t Student's T value pj proportion stratum sj variance stratum max_n maximum number plots area max_error maximum allowed absolute error","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_optimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of plots for optimal allocation with constant cost — calc_n_optimal","text":"length-one numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of plots for proportional allocation — calc_n_prop","title":"Calculates number of plots for proportional allocation — calc_n_prop","text":"Calculates number plots proportional allocation","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of plots for proportional allocation — calc_n_prop","text":"","code":"calc_n_prop(students_t, pj, sj, max_n, max_error)"},{"path":"https://cidree.github.io/silviculture/reference/calc_n_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of plots for proportional allocation — calc_n_prop","text":"students_t Student's T value pj proportion stratum sj variance stratum max_n maximum number plots area max_error maximum allowed absolute error","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of plots for proportional allocation — calc_n_prop","text":"length-one numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of plots using Student's T — calc_n_simple","title":"Calculates number of plots using Student's T — calc_n_simple","text":"Calculates number plots using Student's T","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of plots using Student's T — calc_n_simple","text":"","code":"calc_n_simple(students_t, max_n, cv, max_error)"},{"path":"https://cidree.github.io/silviculture/reference/calc_n_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of plots using Student's T — calc_n_simple","text":"students_t Student's T value max_n maximum number plots area cv coefficient variation max_error maximum allowed relative error","code":""},{"path":"https://cidree.github.io/silviculture/reference/calc_n_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of plots using Student's T — calc_n_simple","text":"length-one numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_cudjoe_2024.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","title":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","text":"Allometric equations adjusted Quercus petraea, Pinus sylvestris Castille León (Spain)","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_cudjoe_2024.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","text":"","code":"eq_biomass_cudjoe_2024(species, component = \"AGB\", return_rmse = FALSE)"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_cudjoe_2024.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. component character string specifying tree component biomass calculation (e.g., \"stem\", \"branches\"). See Details. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_cudjoe_2024.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_cudjoe_2024.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","text":"three species options model: Quercus petraea Pinus sylvestris Mixed: stands Quercus petraea Pinus sylvestris tree components include AGB components: leaves: P. sylvestris stem: species medium branches small brances: species thick branches: species AGB: total biomass, results summing previous components","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_cudjoe_2024.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations for 2 species in Castille and León (Spain) — eq_biomass_cudjoe_2024","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_cudjoe_2024(\"mixed\", \"AGB\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"cudjoe-2017\" #>  @ species   : chr \"Pinus sylvestris x Quercus petraea\" #>  @ component : chr \"AGB\" #>  @ expression:'data.frame':\t3 obs. of  2 variables: #>  .. $ expression: chr  \"0.1714*(-1) + 0.2388 * h\" \"0.7843 + 0.0952 * h\" \"1.8675*(-1) + 0.1974 * h\" #>  .. $ species   : chr  \"Pinus sylvestris x Quercus petraea\" \"Pinus sylvestris x Quercus petraea\" \"Pinus sylvestris x Quercus petraea\" #>  @ url       : chr \"https://doi.org/10.1016/j.scitotenv.2024.176061\" #>  @ obs       : chr \"Diameter is assumed to in centimeters, and height is assumed to be in meters\" #>  @ params    :List of 4 #>  .. $ return_rmse: logi FALSE #>  .. $ comp       : chr [1:3] \"stem\" \"thick branches\" \"medium branches and small branches\" #>  .. $ r2         : num [1:3] NA NA NA #>  .. $ rmse       : num [1:3] 0 0 0.1"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_dieguez_aranda_2009.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","title":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","text":"Allometric equations adjusted Galician (Spain) species","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_dieguez_aranda_2009.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","text":"","code":"eq_biomass_dieguez_aranda_2009(   species,   component = \"stem\",   return_r2 = FALSE,   return_rmse = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_dieguez_aranda_2009.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. component character string specifying tree component biomass calculation (e.g., \"tree\", \"stem\", \"branches\"). See Details. return_r2 logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_dieguez_aranda_2009.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_dieguez_aranda_2009.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","text":"seven species included model: Pinus pinaster, Pinaster radiata, Pinus sylvestris, Eucalyptus globulus, Eucalyptus nitens, Quercus robur, Betula alba tree components divided groups, can introduced component argument: AGB: aboveground biomass components BGB: belowground biomass compoponents tree: total tree biomass includying AGB BGB second group components, related tree groups: stem: includes stem bark branches: includes branches roots: includes roots (BGB) Finally, last level, includes tree components (available species): stem, bark, thick branches (>7cm), medium branches (2-7cm), thin branches (0.5-2cm), twigs (<0.5cm), dry branches, leaves, roots. species, \"stem thick branches\", instead two groups. Users can check list supported species corresponding components biomass_models.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_dieguez_aranda_2009.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations for Galician species — eq_biomass_dieguez_aranda_2009","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_dieguez_aranda_2009(\"Pinus pinaster\", \"AGB\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"dieguez-aranda-2009\" #>  @ species   : chr \"Pinus pinaster\" #>  @ component : chr \"AGB\" #>  @ expression:'data.frame':\t6 obs. of  2 variables: #>  .. $ expression: chr  \"0.3882 + 0.01149 * (d ** 2) * h\" \"0.0079 * (d ** 2.098) * (h ** 0.466)\" \"3.202 - 0.01484 * (d ** 2) - 0.4228 * h + 0.00279 * (d ** 2) * h\" \"0.09781 * (d ** 2.288) * (h ** (-0.9648))\" ... #>  .. $ species   : chr  \"Pinus pinaster\" \"Pinus pinaster\" \"Pinus pinaster\" \"Pinus pinaster\" ... #>  @ url       : chr \"https://www.researchgate.net/publication/312219888_Herramientas_selvicolas_para_la_gestion_forestal_sostenible_en_Galicia\" #>  @ obs       : chr \"Diameter is assumed to in centimeters, and height is assumed to be in meters\" #>  @ params    :List of 5 #>  .. $ return_r2  : logi FALSE #>  .. $ return_rmse: logi FALSE #>  .. $ comp       : chr [1:6] \"stem and thick branches\" \"bark\" \"thick branches\" \"medium branches\" ... #>  .. $ r2         : num [1:6] 0.908 0.943 0.806 0.826 0.678 0.823 #>  .. $ rmse       : num [1:6] 51.2 6.3 13.8 4.7 1.4 5.8"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_manrique_2017.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations two Quercus species — eq_biomass_manrique_2017","title":"Biomass equations two Quercus species — eq_biomass_manrique_2017","text":"Allometric equations adjusted Quercus petraea Quercus pyrenaica Palencia, Spain","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_manrique_2017.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations two Quercus species — eq_biomass_manrique_2017","text":"","code":"eq_biomass_manrique_2017(   species,   component = \"AGB\",   return_r2 = FALSE,   return_rmse = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_manrique_2017.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations two Quercus species — eq_biomass_manrique_2017","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. component character string specifying tree component biomass calculation (e.g., \"stem\", \"branches\"). See Details. return_r2 logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_manrique_2017.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations two Quercus species — eq_biomass_manrique_2017","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_manrique_2017.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations two Quercus species — eq_biomass_manrique_2017","text":"two species model: Quercus petraea Quercus pyrenaica tree components include: stem: includes stem thickest branches medium branches thin branches AGB: total biomass, results summing previous three components","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_manrique_2017.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations two Quercus species — eq_biomass_manrique_2017","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_manrique_2017(\"Quercus petraea\", \"AGB\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"manrique-2017\" #>  @ species   : chr \"Quercus petraea\" #>  @ component : chr \"AGB\" #>  @ expression:'data.frame':\t3 obs. of  2 variables: #>  .. $ expression: chr  \"0.001333 * (d ** 2) * h\" \"0.006531 * (d ** 2) * h - 0.07298 * d * h\" \"0.023772 * (d ** 2) * h\" #>  .. $ species   : chr  \"Quercus petraea\" \"Quercus petraea\" \"Quercus petraea\" #>  @ url       : chr \"https://7cfe.congresoforestal.es/sites/default/files/comunicaciones/772.pdf\" #>  @ obs       : chr \"Diameter is assumed to in centimeters, and height is assumed to be in meters\" #>  @ params    :List of 5 #>  .. $ return_r2  : logi FALSE #>  .. $ return_rmse: logi FALSE #>  .. $ comp       : chr [1:3] \"stem and thick branches\" \"medium branches\" \"small branches\" #>  .. $ r2         : num [1:3] 0.868 0.873 0.99 #>  .. $ rmse       : num [1:3] 29197 120699 155704"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_menendez_2022.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","title":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","text":"Allometric equations young (<30) plantations 18 Spanish species including broadleaf conifer species. aboveground biomass.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_menendez_2022.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","text":"","code":"eq_biomass_menendez_2022(species, return_r2 = FALSE, return_rmse = FALSE)"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_menendez_2022.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. return_r2 logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_menendez_2022.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_menendez_2022.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","text":"15 species model, including generic equations Conifers, Deciduous broadleaves, Evergreen broadleaves. models measure aboveground biomass.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_menendez_2022.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations for young Spanish plantations — eq_biomass_menendez_2022","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_menendez_2022(\"Fagus sylvatica\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"menendez-2022\" #>  @ species   : chr \"Fagus sylvatica\" #>  @ component : chr \"AGB\" #>  @ expression:'data.frame':\t1 obs. of  2 variables: #>  .. $ expression: chr \"0.0574 * ((rcd ** 2) * h) ** 0.8930\" #>  .. $ species   : chr \"Fagus sylvatica\" #>  @ url       : chr \"https://doi.org/10.1016/j.biombioe.2022.106453\" #>  @ obs       : chr \"AGB is the aboveground dry biomass or aerial biomass (kg), RCD is the root-collar-diameter (cm), h is the total\"| __truncated__ #>  @ params    :List of 5 #>  .. $ return_r2  : logi FALSE #>  .. $ return_rmse: logi FALSE #>  .. $ comp       : chr \"agb\" #>  .. $ r2         : num 0.97 #>  .. $ rmse       : num 3.5"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_montero_2005.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations for Spanish species — eq_biomass_montero_2005","title":"Biomass equations for Spanish species — eq_biomass_montero_2005","text":"Allometric equations adjusted Spanish species","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_montero_2005.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations for Spanish species — eq_biomass_montero_2005","text":"","code":"eq_biomass_montero_2005(species, component = \"stem\", return_r2 = FALSE)"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_montero_2005.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations for Spanish species — eq_biomass_montero_2005","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. component character string specifying tree component biomass calculation (e.g., \"tree\", \"stem\", \"branches\"). See Details. return_r2 logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_montero_2005.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations for Spanish species — eq_biomass_montero_2005","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_montero_2005.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations for Spanish species — eq_biomass_montero_2005","text":"35 species included model. tree components divided groups, can introduced component argument: AGB: aboveground biomass components BGB: belowground biomass compoponents tree : total tree biomass includying AGB BGB second group components, related tree groups: stem: includes stem bark branches: includes branches roots: includes roots (BGB) Finally, last level, includes tree components (available species): stem, bark, thick branches (>7cm), medium branches (2-7cm), thin branches (0.5-2cm), leaves (include needles), roots. species, \"stem thick branches\", instead two groups. Users can check list supported species corresponding components biomass_models.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_montero_2005.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations for Spanish species — eq_biomass_montero_2005","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_montero_2005(\"Pinus pinaster\", \"AGB\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"montero-2005\" #>  @ species   : chr \"Pinus pinaster\" #>  @ component : chr \"AGB\" #>  @ expression:'data.frame':\t5 obs. of  2 variables: #>  .. $ expression: chr  \"exp(0.191593 **2) / 2) * exp(-3.43957) * (d ** 2.56636)\" \"exp(0.324283 **2) / 2) * exp(-23.0418) * (d ** 6.52359)\" \"exp(0.744427 **2) / 2) * exp(-6.66264) * (d ** 2.63946)\" \"exp(0.527572 **2) / 2) * exp(-4.66658) * (d ** 2.38009)\" ... #>  .. $ species   : chr  \"Pinus pinaster\" \"Pinus pinaster\" \"Pinus pinaster\" \"Pinus pinaster\" ... #>  @ url       : chr \"https://gregoriomontero.wordpress.com/wp-content/uploads/2016/09/2005-01-monografc3ada-forestal-13-m-produccic3\"| __truncated__ #>  @ obs       : chr \"Diameter is assumed to in centimeters, and height is assumed to be in meters\" #>  @ params    :List of 3 #>  .. $ return_r2: logi FALSE #>  .. $ comp     : chr [1:5] \"stem\" \"thick branches\" \"medium branches\" \"small branches\" ... #>  .. $ r2       : num [1:5] 0.964 0.927 0.651 0.752 NA"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2011.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","title":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","text":"Allometric equations adjusted Spanish softwood species","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2011.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","text":"","code":"eq_biomass_ruiz_peinado_2011(species, component = \"stem\", return_rmse = FALSE)"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2011.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. component character string specifying tree component biomass calculation (e.g., \"tree\", \"stem\", \"branches\"). See Details. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2011.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2011.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","text":"Users can check list supported species corresponding components biomass_models.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2011.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations for Spanish softwood species — eq_biomass_ruiz_peinado_2011","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_ruiz_peinado_2011(\"Pinus pinaster\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"ruiz-peinado-2011\" #>  @ species   : chr \"Pinus pinaster\" #>  @ component : chr \"stem\" #>  @ expression:'data.frame':\t1 obs. of  2 variables: #>  .. $ expression: chr \"0.0278 * d^2.115 * h^0.618\" #>  .. $ species   : chr \"Pinus pinaster\" #>  @ url       : chr \"https://doi.org/10.5424/fs/2011201-11643\" #>  @ obs       : chr \"Diameter is assumed to in centimeters, and height is assumed to be in meters\" #>  @ params    :List of 3 #>  .. $ return_rmse: logi FALSE #>  .. $ comp       : chr \"stem\" #>  .. $ rmse       : num 14.5"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","title":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","text":"Allometric equations adjusted Spanish hardwood species","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","text":"","code":"eq_biomass_ruiz_peinado_2012(species, component = \"stem\", return_rmse = FALSE)"},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. component character string specifying tree component biomass calculation (e.g., \"tree\", \"stem\", \"branches\"). See Details. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2012.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","text":"S7 list parameters","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2012.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","text":"Users can check list supported species corresponding components biomass_models.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_biomass_ruiz_peinado_2012.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass equations for Spanish hardwood species — eq_biomass_ruiz_peinado_2012","text":"","code":"## get model parameters for silv_predict_biomass eq_biomass_ruiz_peinado_2012(\"Quercus suber\") #> <silviculture::ModelBiomass> #>  @ equation  : chr \"ruiz-peinado-2011\" #>  @ species   : chr \"Quercus suber\" #>  @ component : chr \"stem\" #>  @ expression:'data.frame':\t1 obs. of  2 variables: #>  .. $ expression: chr \"0.00525 * d^2 * h + 0.278 * d * h\" #>  .. $ species   : chr \"Quercus suber\" #>  @ url       : chr \"http://dx.doi.org/10.5424/fs/2112211-02193\" #>  @ obs       : chr \"Diameter is assumed to in centimeters, and height is assumed to be in meters\" #>  @ params    :List of 3 #>  .. $ return_rmse: logi FALSE #>  .. $ comp       : chr \"stem\" #>  .. $ rmse       : num 66.9"},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"function intended used silv_predict_height(). implements h-d equations developed Vázquez-Veloso et al. (2025). equations developed using Spanish National Forest Inventory, therefore, applied within Spain. model includes parameters 91 tree species.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"","code":"eq_hd_vazquez_veloso_2025(   species,   bioregion = \"mediterranean\",   origin = \"natural\",   mixture = \"pure\" )"},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"species character string specifying scientific name tree species. can column name species included model. See Details available species. specified, takes value \"species\", corresponds generic model applicable species. bioregion biogeopgrahic region species. Available options : mediterranean, atlantic, alpine, macaronesian. specified, takes value mediterranean, common region Spain. can check distribution regions : https://ars.els-cdn.com/content/image/1-s2.0-S037811272500489X-gr1.jpg origin origin stand. Available options : natural plantation. specified, takes value natural, common origin Spain. mixture species available stand. Available options : pure mix. Consider characteristics plot evaluating entire forest, conditions stand different. study, considered stand mixed combined proportion least two species exceeds 90% plot's basal area, proportion species greater 15% total. matter species accompanying proportion mixing. specified, takes value pure, common condition Spain.","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"numeric vector predicted height","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"Details...#TODO","code":""},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"Vázquez-Veloso, ., Yang, S.-., Bullock, B.P., Bravo, F., 2025. One model rule : nationwide height–diameter model 91 Spanish forest species. Forest Ecology Management 595, 122981. https://doi.org/10.1016/j.foreco.2025.122981","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/eq_hd_vazquez_veloso_2025.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates tree height from DBH — eq_hd_vazquez_veloso_2025","text":"","code":"1 + 1 #TODO #> [1] 2"},{"path":"https://cidree.github.io/silviculture/reference/inventory_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest inventory samples — inventory_samples","title":"Forest inventory samples — inventory_samples","text":"Inventory data Spanish National Forest Inventory","code":""},{"path":"https://cidree.github.io/silviculture/reference/inventory_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest inventory samples — inventory_samples","text":"","code":"inventory_samples"},{"path":"https://cidree.github.io/silviculture/reference/inventory_samples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Forest inventory samples — inventory_samples","text":"tibble","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_fcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Forest Fraction Cover from LiDAR Data — lid_fcov","title":"Calculate Forest Fraction Cover from LiDAR Data — lid_fcov","text":"function calculates forest fraction cover (Fcov) LiDAR data. Fcov LiDAR defined proportion first returns specified height threshold (default: 5 meters) relative total number first returns.","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_fcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Forest Fraction Cover from LiDAR Data — lid_fcov","text":"","code":"lid_fcov(z, rn, th = 5)"},{"path":"https://cidree.github.io/silviculture/reference/lid_fcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Forest Fraction Cover from LiDAR Data — lid_fcov","text":"z numeric vector representing heights LiDAR returns rn integer vector indicating return number LiDAR point. First returns identified value 1 th numeric vector length one specifying height threshold","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_fcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Forest Fraction Cover from LiDAR Data — lid_fcov","text":"numeric value representing forest fraction cover, proportion first returns heights greater 5 meters.","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_fcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Forest Fraction Cover from LiDAR Data — lid_fcov","text":"","code":"# Example data z <- c(2, 6, 10, 4, 15) rn <- c(1, 1, 2, 1, 1)  # Calculate forest fraction cover lid_fcov(z, rn) #> [1] 0.5"},{"path":"https://cidree.github.io/silviculture/reference/lid_lhdi.html","id":null,"dir":"Reference","previous_headings":"","what":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","title":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","text":"LiDAR metric calculates LiDAR Height Diversity Index, can used lidR *_metrics functions","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_lhdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","text":"","code":"lid_lhdi(z, interval = 0.5)"},{"path":"https://cidree.github.io/silviculture/reference/lid_lhdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","text":"z coordinate Z (height) point interval height intervals calculate metric","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_lhdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","text":"numeric","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_lhdi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","text":"Listopad, C. M. C. S., Masters, R. E., Drake, J., Weishampel, J., & Branquinho, C. (2015). Structural diversity indices based airborne LiDAR ecological indicators managing highly dynamic landscapes. Ecological Indicators, 57, 268–279. doi:10.1016/j.ecolind.2015.04.017","code":""},{"path":"https://cidree.github.io/silviculture/reference/lid_lhdi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LiDAR-derived Height Diversity Index (LHDI) — lid_lhdi","text":"","code":"1 + 1 ## TODO #> [1] 2"},{"path":"https://cidree.github.io/silviculture/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an object — plot","title":"Plot an object — plot","text":"Generic plotting objects.","code":""},{"path":"https://cidree.github.io/silviculture/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an object — plot","text":"","code":"plot(x, ...)"},{"path":"https://cidree.github.io/silviculture/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an object — plot","text":"x Object plot. ... arguments passed methods.","code":""},{"path":"https://cidree.github.io/silviculture/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an object — plot","text":"Usually called side-effects (producing plot).","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_basal_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Basal Area — silv_basal_area","title":"Calculates Basal Area — silv_basal_area","text":"Calculates Basal Area square meters.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_basal_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Basal Area — silv_basal_area","text":"","code":"silv_basal_area(diameter, ntrees = NULL, units = \"cm\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_basal_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Basal Area — silv_basal_area","text":"diameter Numeric vector diameters diameter classes ntrees Numeric vector number trees diameter class per hectare. ntrees = NULL, function assume diameter corresponds one tree. Therefore, basal area calculated individual tree units units diameter (one cm, mm, m)","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_basal_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Basal Area — silv_basal_area","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_basal_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Basal Area — silv_basal_area","text":"function uses next formula: \\(G = \\frac{\\pi}{40000} \\cdot D^2\\) G basal area \\(m^2\\), D diameter units specified function. recommended use squared mean diameter calculated silv_sqrmean_diameter","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_basal_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Basal Area — silv_basal_area","text":"","code":"## calculate G for inventory data grouped by plot_id and species library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union inventory_samples |> mutate(dclass = silv_diametric_class(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_ntrees_ha(ntrees, plot_size = 10),     dg        = silv_sqrmean_diameter(dclass, ntrees_ha),     g         = silv_basal_area(dclass, ntrees_ha),     .by       = c(plot_id, species)   ) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `dclass = silv_diametric_class(diameter)`. #> Caused by warning: #> ! `silv_diametric_class()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_diametric_class() is deprecated in favour of #>   `silv_tree_dclass()`, and it will be removed in the next release. #> Warning: There were 3 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `ntrees_ha = silv_ntrees_ha(ntrees, plot_size = 10)`. #> ℹ In group 1: `plot_id = 7` `species = 27`. #> Caused by warning: #> ! `silv_ntrees_ha()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_ntrees_ha() is deprecated in favour of #>   `silv_density_ntrees_ha()`, and it will be removed in the next release. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings. #> # A tibble: 57 × 8 #>    plot_id species dclass height ntrees ntrees_ha    dg     g #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl> <dbl> #>  1       7      27     50  18         3      95.5  57.9 18.8  #>  2       7      27     55  17.6       5     159.   57.9 37.8  #>  3       7      27     35  16.5       1      31.8  57.9  3.06 #>  4       7      27     45  14.6       2      63.7  57.9 10.1  #>  5       7      27     60  19.1       3      95.5  57.9 27    #>  6       7      27     25  12.9       1      31.8  57.9  1.56 #>  7       7      27    120  20.9       1      31.8  57.9 36    #>  8       8      83     20   5.10      3      95.5  15.1  3    #>  9       8      83     10   6.10      4     127.   15.1  1    #> 10       8      28     55  15.5       1      31.8  57.6  7.56 #> # ℹ 47 more rows  ## calculate individual basal area silv_basal_area(c(23, 11, 43.5, 94)) #> [1] 0.041547563 0.009503318 0.148616967 0.693977817"},{"path":"https://cidree.github.io/silviculture/reference/silv_biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tree Biomass — silv_biomass","title":"Calculate Tree Biomass — silv_biomass","text":"Computes biomass tree species using species-specific allometric equations (kg).","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_biomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tree Biomass — silv_biomass","text":"","code":"silv_biomass(   diameter = NULL,   height = NULL,   ntrees = NULL,   species = NULL,   component = \"stem\",   model = \"ruiz-peinado-2012\",   return_rmse = FALSE,   quiet = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_biomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tree Biomass — silv_biomass","text":"diameter numeric vector tree diameters (cm). height numeric vector tree heights (m). ntrees optional numeric value indicating number trees diameter-height class. Defaults 1 NULL. species character string specifying scientific name tree species. See Details available species. component character string specifying tree component biomass calculation (e.g., \"tree\", \"stem\", \"branches\"). See Details. model character string indicating ID publication model developed. Currently supported models: \"ruiz-peinado-2012\" (hardwood species Spain) \"ruiz-peinado-2011\" (softwood species Spain). See Details. return_rmse logical value. TRUE, function returns root mean squared error (RMSE) selected model instead biomass value. quiet logical value. TRUE, suppresses informational messages.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tree Biomass — silv_biomass","text":"numeric vector biomass values (kg). return_rmse = TRUE, returns RMSE instead.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_biomass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Tree Biomass — silv_biomass","text":"function estimates biomass using validated allometric models available dataset biomass_models. available models include: ruiz-peinado-2011: Developed softwood species Spain. ruiz-peinado-2012: Developed hardwood species Spain. Users can check list supported species corresponding components biomass_models. like suggest additional models, please open new issue GitHub.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_biomass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Tree Biomass — silv_biomass","text":"","code":"# Calculate biomass for a single tree silv_biomass(   diameter = 45,   height   = 22,   species  = \"Pinus pinaster\",   model    = \"ruiz-peinado-2011\" ) #> Warning: `silv_biomass()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_biomass() is deprecated in favour of `silv_predict_biomass()`, #>   and it will be removed in the next release. #> ! Cite this model using <https://doi.org/10.5424/fs/2011201-11643> #> [1] 589.1237"},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":null,"dir":"Reference","previous_headings":"","what":"Hart or Hart-Becking spacing index — silv_density_hart","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"Calculates Hart Index Hart-Becking Index even-aged stands","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"","code":"silv_density_hart(h0, ntrees, which = \"hart\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"h0 Numeric vector dominant height ntrees Numeric vector number trees dominant height per hectare character name index (either hart hart-brecking). See details","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"spacing index can used determine whether thinning needed , also determine intense . Hart Index: assumes even-aged stands square planting pattern. Hart-Brecking Index: assumes triangular planting pattern.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"Assmann, E. (1970) principles forest yield study: Studies organic production, structure, increment, yield forest stands. Pergamon Press, Oxford.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_hart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hart or Hart-Becking spacing index — silv_density_hart","text":"","code":"library(dplyr) ## Calculate spacing index for each plot inventory_samples |>   summarise(     h0     = silv_stand_dominant_height(diameter, height),     ntrees = n(),     .by    = plot_id   ) |>   ## calculate number of trees per hectare   mutate(ntrees_ha = silv_density_ntrees_ha(ntrees, plot_size = 14.1)) |>   mutate(spacing = silv_density_hart(h0, ntrees_ha)) #> # A tibble: 5 × 5 #>   plot_id    h0 ntrees ntrees_ha spacing #>     <int> <dbl>  <int>     <dbl>   <dbl> #> 1       7 17.4      16      256.    35.9 #> 2       8  7.21     22      352.    73.9 #> 3      10 13.0      25      400.    38.4 #> 4      53 21.3      19      304.    26.9 #> 5     189 11.0      80     1281.    25.4"},{"path":"https://cidree.github.io/silviculture/reference/silv_density_ntrees_ha.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of trees per hectare — silv_density_ntrees_ha","title":"Calculates number of trees per hectare — silv_density_ntrees_ha","text":"Calculates number trees per hectare given plot size shape","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_ntrees_ha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of trees per hectare — silv_density_ntrees_ha","text":"","code":"silv_density_ntrees_ha(ntrees, plot_size, plot_shape = \"circular\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_density_ntrees_ha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of trees per hectare — silv_density_ntrees_ha","text":"ntrees numeric vector representing number trees sampling plot plot_size numeric vector length one circular radius meters; numeric vector length two side rectangular plot shape plot_shape shape sampling plot. Either circular rectangular","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_ntrees_ha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of trees per hectare — silv_density_ntrees_ha","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_ntrees_ha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates number of trees per hectare — silv_density_ntrees_ha","text":"","code":"library(dplyr) ## Circular plot of 10 meters radius inventory_samples |>   count(plot_id, species) |>   mutate(     ntrees_ha = silv_density_ntrees_ha(n, plot_size = 10)   ) #> # A tibble: 14 × 4 #>    plot_id species     n ntrees_ha #>      <int>   <int> <int>     <dbl> #>  1       7      27    16     509.  #>  2       8      28     2      63.7 #>  3       8      81     8     255.  #>  4       8      83     7     223.  #>  5       8     294     5     159.  #>  6      10      27     6     191.  #>  7      10      72     4     127.  #>  8      10      81    10     318.  #>  9      10      83     5     159.  #> 10      53      27    19     605.  #> 11     189      81    14     446.  #> 12     189      82    13     414.  #> 13     189      83    11     350.  #> 14     189      84    42    1337.   ## Rectangular plot of 10x15 meters inventory_samples |>   count(plot_id, species) |>   mutate(     ntrees_ha = silv_density_ntrees_ha(       n,       plot_size = c(10, 15),       plot_shape = \"rectangular\"      )   ) #> # A tibble: 14 × 4 #>    plot_id species     n ntrees_ha #>      <int>   <int> <int>     <dbl> #>  1       7      27    16     1067. #>  2       8      28     2      133. #>  3       8      81     8      533. #>  4       8      83     7      467. #>  5       8     294     5      333. #>  6      10      27     6      400  #>  7      10      72     4      267. #>  8      10      81    10      667. #>  9      10      83     5      333. #> 10      53      27    19     1267. #> 11     189      81    14      933. #> 12     189      82    13      867. #> 13     189      83    11      733. #> 14     189      84    42     2800"},{"path":"https://cidree.github.io/silviculture/reference/silv_density_sdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Stand Density Index — silv_density_sdi","title":"Calculates the Stand Density Index — silv_density_sdi","text":"Stand Density Index (SDI) relationship average tree size density trees per hectare.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_sdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Stand Density Index — silv_density_sdi","text":"","code":"silv_density_sdi(ntrees, dg, classify = FALSE, max_sdi = NULL)"},{"path":"https://cidree.github.io/silviculture/reference/silv_density_sdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Stand Density Index — silv_density_sdi","text":"ntrees numeric vector representing number trees per hectare dg numeric vector quadratic mean diameters classify whether classify values using USDA thresholds max_sdi used classify = TRUE. maximum SDi, depends species, stand type, site","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_sdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Stand Density Index — silv_density_sdi","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_sdi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the Stand Density Index — silv_density_sdi","text":"SDI different interpretation depending species, location, also management type (even-aged, uneven-aged...). value maximum SDI must determined literature used carefully. option classify = TRUE use value classify SDI low density (<24%), moderate density (24-35%), high density (34-55%), extremely high density (>55%).","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_density_sdi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Stand Density Index — silv_density_sdi","text":"","code":"## calculate SDI for a Pinus sulvestris stand (max 990) silv_density_sdi(ntrees = 800, dg = 23.4, max_sdi = 990) #> [1] 70.84156  ## check base classification (other can be used) silv_density_sdi(ntrees = 800, dg = 23.4, classify = TRUE, max_sdi = 990) #> [1] \"Extremely high density\""},{"path":"https://cidree.github.io/silviculture/reference/silv_diametric_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify diameters in classes — silv_diametric_class","title":"Classify diameters in classes — silv_diametric_class","text":"Classifies measured diameters classes specified length","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_diametric_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify diameters in classes — silv_diametric_class","text":"","code":"silv_diametric_class(   diameter,   dmin = 7.5,   dmax = NULL,   class_length = 5,   include_lowest = TRUE,   return_intervals = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_diametric_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify diameters in classes — silv_diametric_class","text":"diameter numeric vector diameters dmin minimum inventory diameter centimeters dmax maximum inventory diameter centimeters. Values greater dmax included greatest class class_length length class centimeters include_lowest Logical. TRUE (default), intervals [dim1, dim2). FALSE, intervals (dim1, dim2] [dim1, dim2). FALSE, intervals (dim1, dim2]: R:dim1,%20dim2)%60.%20If%20FALSE,%20the%20intervals%20are%20%60(dim1,%20dim2 return_intervals FALSE, returns intervals. Otherwise (default), returns class center","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_diametric_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify diameters in classes — silv_diametric_class","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_diametric_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify diameters in classes — silv_diametric_class","text":"","code":"library(dplyr) inventory_samples |>   mutate(dclass = silv_diametric_class(diameter)) #> # A tibble: 162 × 5 #>    plot_id species diameter height dclass #>      <int>   <int>    <dbl>  <dbl>  <dbl> #>  1       7      27     50.6   18.9     50 #>  2       7      27     57.2   19.8     55 #>  3       7      27     36.4   16.5     35 #>  4       7      27     46.4   18.5     45 #>  5       7      27     55.5   19.5     55 #>  6       7      27     59.5   17.7     60 #>  7       7      27     24.3   12.9     25 #>  8       7      27     50.5   16.6     50 #>  9       7      27     55.3   19.3     55 #> 10       7      27     48.6   18.5     50 #> # ℹ 152 more rows"},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the dominant height — silv_dominant_height","title":"Calculates the dominant height — silv_dominant_height","text":"Calculates dominant height using Assman equation Hart equation","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the dominant height — silv_dominant_height","text":"","code":"silv_dominant_height(diameter, height, ntrees = NULL, which = \"assman\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the dominant height — silv_dominant_height","text":"diameter Numeric vector diameter classes height Numeric vector averaged heights diameter class ntrees Optional. Numeric vector number trees per hectare. Use argument aggregated data diametric classes (see details). method calculate dominant height (see details)","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the dominant height — silv_dominant_height","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the dominant height — silv_dominant_height","text":"dominant height \\(H_0\\) mean height dominant trees, less affected overall mean height thinning treatments. Assman: calculates \\(H_0\\) mean height 100 thickest trees per hectare Hart: calculates \\(H_0\\) mean height 100 tallest trees per hectare ntrees = NULL, function assume diameter height belongs one tree. data aggregated hectare, use number trees per hectare argument.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the dominant height — silv_dominant_height","text":"Assmann, E. (1970) principles forest yield study: Studies organic production, structure, increment, yield forest stands. Pergamon Press, Oxford.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_dominant_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the dominant height — silv_dominant_height","text":"","code":"## calculate h0 for inventory data grouped by plot_id and species library(dplyr) inventory_samples |> mutate(dclass = silv_diametric_class(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_ntrees_ha(ntrees, plot_size = 10),     h0        = silv_dominant_height(dclass, height, ntrees_ha),     .by       = c(plot_id, species)   ) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `h0 = silv_dominant_height(dclass, height, ntrees_ha)`. #> ℹ In group 1: `plot_id = 7` `species = 27`. #> Caused by warning: #> ! `silv_dominant_height()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_dominant_height() is deprecated in favour of #>   `silv_stand_dominant_height()`, and it will be removed in the next release. #> # A tibble: 57 × 7 #>    plot_id species dclass height ntrees ntrees_ha    h0 #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl> #>  1       7      27     50  18         3      95.5 19.7  #>  2       7      27     55  17.6       5     159.  19.7  #>  3       7      27     35  16.5       1      31.8 19.7  #>  4       7      27     45  14.6       2      63.7 19.7  #>  5       7      27     60  19.1       3      95.5 19.7  #>  6       7      27     25  12.9       1      31.8 19.7  #>  7       7      27    120  20.9       1      31.8 19.7  #>  8       8      83     20   5.10      3      95.5  5.15 #>  9       8      83     10   6.10      4     127.   5.15 #> 10       8      28     55  15.5       1      31.8 17.5  #> # ℹ 47 more rows"},{"path":"https://cidree.github.io/silviculture/reference/silv_lorey_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Lorey's Height — silv_lorey_height","title":"Calculates Lorey's Height — silv_lorey_height","text":"#' @description","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_lorey_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Lorey's Height — silv_lorey_height","text":"","code":"silv_lorey_height(height, g, ntrees = NULL)"},{"path":"https://cidree.github.io/silviculture/reference/silv_lorey_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Lorey's Height — silv_lorey_height","text":"height Numeric vector heights g Numeric vector basal areas ntrees Optional. Numeric vector number trees per hectare. Use argument aggregated data diametric classes (see details).","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_lorey_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Lorey's Height — silv_lorey_height","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_lorey_height.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Lorey's Height — silv_lorey_height","text":"Tree's mean height weighted basal area function calculates Lorey's mean height according : $$h_L = \\frac{\\sum n_i g_i h_i}{\\sum n_i g_i}$$ ntrees provided (.e. ntrees = NULL) formula simply weighted mean provided heights basal areas: $$h_L = \\frac{\\sum g_i h_i}{\\sum g_i}$$","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_lorey_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Lorey's Height — silv_lorey_height","text":"","code":"## Calculate Lorey's Height by plot and species library(dplyr) inventory_samples |>   mutate(g = silv_basal_area(diameter)) |>   summarise(     lh  = silv_lorey_height(height, g),     .by = c(plot_id, species)   ) #> Warning: There was 1 warning in `summarise()`. #> ℹ In argument: `lh = silv_lorey_height(height, g)`. #> ℹ In group 1: `plot_id = 7` `species = 27`. #> Caused by warning: #> ! `silv_lorey_height()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_lorey_height() is deprecated in favour of #>   `silv_stand_lorey_height()`, and it will be removed in the next release. #> # A tibble: 14 × 3 #>    plot_id species    lh #>      <int>   <int> <dbl> #>  1       7      27 18.5  #>  2       8      83  5.46 #>  3       8      28 17.7  #>  4       8     294  6.95 #>  5       8      81  6.14 #>  6      10      81  7.51 #>  7      10      72 14.2  #>  8      10      83  6.37 #>  9      10      27 28.6  #> 10      53      27 23.5  #> 11     189      81 12.6  #> 12     189      84 12.9  #> 13     189      82 10.9  #> 14     189      83  9.49"},{"path":"https://cidree.github.io/silviculture/reference/silv_ntrees_ha.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates number of trees per hectare — silv_ntrees_ha","title":"Calculates number of trees per hectare — silv_ntrees_ha","text":"Calculates number trees per hectare given plot size shape","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_ntrees_ha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates number of trees per hectare — silv_ntrees_ha","text":"","code":"silv_ntrees_ha(ntrees, plot_size, plot_shape = \"circular\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_ntrees_ha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates number of trees per hectare — silv_ntrees_ha","text":"ntrees numeric vector representing number trees sampling plot plot_size numeric vector length one circular radius meters; numeric vector length two side rectangular plot shape plot_shape shape sampling plot. Either circular rectangular","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_ntrees_ha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates number of trees per hectare — silv_ntrees_ha","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_ntrees_ha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates number of trees per hectare — silv_ntrees_ha","text":"","code":"library(dplyr) ## Circular plot of 10 meters radius inventory_samples |>   count(plot_id, species) |>   mutate(     ntrees_ha = silv_ntrees_ha(n, plot_size = 10)   ) #> # A tibble: 14 × 4 #>    plot_id species     n ntrees_ha #>      <int>   <int> <int>     <dbl> #>  1       7      27    16     509.  #>  2       8      28     2      63.7 #>  3       8      81     8     255.  #>  4       8      83     7     223.  #>  5       8     294     5     159.  #>  6      10      27     6     191.  #>  7      10      72     4     127.  #>  8      10      81    10     318.  #>  9      10      83     5     159.  #> 10      53      27    19     605.  #> 11     189      81    14     446.  #> 12     189      82    13     414.  #> 13     189      83    11     350.  #> 14     189      84    42    1337.   ## Rectangular plot of 10x15 meters inventory_samples |>   count(plot_id, species) |>   mutate(     ntrees_ha = silv_ntrees_ha(       n,       plot_size = c(10, 15),       plot_shape = \"rectangular\"      )   ) #> # A tibble: 14 × 4 #>    plot_id species     n ntrees_ha #>      <int>   <int> <int>     <dbl> #>  1       7      27    16     1067. #>  2       8      28     2      133. #>  3       8      81     8      533. #>  4       8      83     7      467. #>  5       8     294     5      333. #>  6      10      27     6      400  #>  7      10      72     4      267. #>  8      10      81    10      667. #>  9      10      83     5      333. #> 10      53      27    19     1267. #> 11     189      81    14      933. #> 12     189      82    13      867. #> 13     189      83    11      733. #> 14     189      84    42     2800"},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tree Biomass — silv_predict_biomass","title":"Calculate Tree Biomass — silv_predict_biomass","text":"Computes biomass tree species using species-specific allometric equations (kg). Currently, equations Spain available.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_biomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tree Biomass — silv_predict_biomass","text":"","code":"silv_predict_biomass(   diameter = NULL,   height = NULL,   model,   ntrees = NULL,   quiet = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_biomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tree Biomass — silv_predict_biomass","text":"diameter numeric vector tree diameters (cm). height numeric vector tree heights (m). model function. function structure eq_biomass_*() additional arguments depending model used. ntrees optional numeric value indicating number trees diameter-height class. Defaults 1 NULL. quiet logical value. TRUE, suppresses informational messages.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tree Biomass — silv_predict_biomass","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_biomass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Tree Biomass — silv_predict_biomass","text":"function estimates biomass using validated allometric models available dataset biomass_models. available models include: eq_biomass_ruiz_peinado_2011(): Developed softwood species Spain. eq_biomass_ruiz_peinado_2012(): Developed hardwood species Spain. Users can check list supported species corresponding components biomass_models. like suggest additional models, please open new issue GitHub.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_biomass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Tree Biomass — silv_predict_biomass","text":"","code":"# Calculate biomass for a single tree silv_predict_biomass(   diameter = 45,   height   = 22,   model    = eq_biomass_ruiz_peinado_2011(\"Pinus pinaster\") ) #> ! Cite this model using <https://doi.org/10.5424/fs/2011201-11643> #> ℹ Diameter is assumed to in centimeters, and height is assumed to be in meters #> [1] 589.1237"},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates tree height from DBH — silv_predict_height","title":"Estimates tree height from DBH — silv_predict_height","text":"Estimates total tree height using height-diameter (h-d) equations. Currently, models developed Spain available.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates tree height from DBH — silv_predict_height","text":"","code":"silv_predict_height(diameter, model, quiet = FALSE)"},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates tree height from DBH — silv_predict_height","text":"diameter Numeric vector diameters cm model function. function structure eq_hd_*() additional arguments depending specific model. Currently eq_hd_vazquez_veloso_2025() available. quiet logical value. TRUE, suppresses informational messages.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates tree height from DBH — silv_predict_height","text":"numeric vector predicted heights","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimates tree height from DBH — silv_predict_height","text":"function estimates total tree height (meters) using diameter breast height (centimeters), may require additional information depending specific model. See model’s documentation details.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimates tree height from DBH — silv_predict_height","text":"References models available: eq_hd_vazquez_veloso_2025(): Vázquez-Veloso, ., Yang, S.-., Bullock, B.P., Bravo, F., 2025. One model rule : nationwide height–diameter model 91 Spanish forest species. Forest Ecology Management 595, 122981. https://doi.org/10.1016/j.foreco.2025.122981","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silv_predict_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates tree height from DBH — silv_predict_height","text":"","code":"1 + 1 #TODO #> [1] 2"},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates sample size for a random sampling inventory — silv_sample_size","text":"","code":"silv_sample_size(   x,   plot_size,   total_area,   method = \"random\",   max_error = 0.05,   conf_level = 0.95,   max_iter = 1000,   quiet = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates sample size for a random sampling inventory — silv_sample_size","text":"x vector field survey plot_size numeric vector length one plot size squared meters total_area total area study area squared meters method sampling method. Available options random max_error maximum allowed error conf_level confidence level max_iter maximum number iteration find plot size quiet TRUE, messages supressed","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates sample size for a random sampling inventory — silv_sample_size","text":"SampleSize object","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates sample size for a random sampling inventory — silv_sample_size","text":"","code":"## pilot inventory measuring 4 plots of 25x25 meters ## total forest area 15 ha ## measured variable (x): basal area per hectare silv_sample_size(   x          = c(33, 37.5, 42, 35.2),   plot_size  = 25 * 25,  # squared plot of 25x25   total_area = 15 * 1e4, # 15 ha   max_error  = 0.05,   conf_level = 0.95,   max_iter   = 100 ) #> Warning: `silv_sample_size()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_sample_size() is deprecated in favour of #>   `silv_sample_size_simple()`, and it will be removed in the next release. #> ℹ A total of 4 plots were measured in the pilot inventory, each plot measuring 625 squared meters. #> ℹ A minimum of 18 inventory plots are needed for a maximum sampling error of 5% (95% CI [35.08, 38.77]). #> ℹ The sampling effort will be 1.2 plots/ha #> ℹ Note that these calculations assume that you will do a simple random sampling #> <silviculture::SampleSize> #>  @ sampling_res :List of 4 #>  .. $ min_plots      : num 18 #>  .. $ ci_lo          : num 35.1 #>  .. $ ci_up          : num 38.8 #>  .. $ sampling_effort: num 1.2 #>  @ sampling_opts:List of 5 #>  .. $ pilot_plots: num [1:4] 33 37.5 42 35.2 #>  .. $ plot_size  : num 625 #>  .. $ total_area : num 150000 #>  .. $ max_error  : num 0.05 #>  .. $ conf_level : num 0.95"},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","title":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","text":"Calculates sample size needed SRS inventory, estimated pilot inventory data.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","text":"","code":"silv_sample_size_simple(   x,   plot_size,   total_area,   max_error = 0.05,   conf_level = 0.95,   max_iter = 1000,   quiet = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","text":"x vector variable measured pilot inventory (e.g. basal area, volume) plot_size numeric vector length one plot size squared meters total_area total area study area squared meters max_error maximum allowed relative error conf_level confidence level max_iter maximum number iteration find plot size quiet TRUE, messages supressed","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","text":"SimpleSampleSize object","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","text":"Sample size important optimized, since small sample size entail higher error, huge sample size entail higher costs. SRS typically used random sampling, although might used also regular sampling. number samples calculated using expression: \\(n \\ge \\frac{t^2 \\cdot CV^2}{\\epsilon^2 + \\frac{t^2 \\cdot CV^2}{N}}\\) : t: value student's t given sample size pilot inventory CV: coefficient variation x \\(\\epsilon\\): relative error (max_error) N: size pilot inventory x variable measured pilot inventory. say measure forest variables 10 pilot plots, aiming basal area measurement measure DBH. calculations, basal area per hectare 10 plots. sample size calculated variation values error allow.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates sample size for a simple random sampling (SRS) — silv_sample_size_simple","text":"","code":"## pilot inventory measuring 4 plots of 25x25 meters ## total forest area 15 ha ## measured variable (x): basal area per hectare silv_sample_size_simple(   x          = c(33, 37.5, 42, 35.2),   plot_size  = 25 * 25,  # squared plot of 25x25   total_area = 15 * 1e4, # 15 ha   max_error  = 0.05,   conf_level = 0.95,   max_iter   = 100 ) #> ℹ A total of 4 plots were measured in the pilot inventory, each plot measuring 625 squared meters. #> ℹ A minimum of 18 inventory plots are needed for a maximum sampling error of 5% (95% CI [35.08, 38.77]). #> ℹ The sampling effort will be 1.2 plots/ha #> ℹ Note that these calculations assume that you will do a simple random sampling #> <silviculture::SampleSize> #>  @ sampling_res :List of 4 #>  .. $ min_plots      : num 18 #>  .. $ ci_lo          : num 35.1 #>  .. $ ci_up          : num 38.8 #>  .. $ sampling_effort: num 1.2 #>  @ sampling_opts:List of 5 #>  .. $ pilot_plots: num [1:4] 33 37.5 42 35.2 #>  .. $ plot_size  : num 625 #>  .. $ total_area : num 150000 #>  .. $ max_error  : num 0.05 #>  .. $ conf_level : num 0.95"},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_stratified.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","title":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","text":"Calculates sample size needed stratified inventory, estimated pilot inventory data.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_stratified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","text":"","code":"silv_sample_size_stratified(   data,   x,   strata,   total_area,   plot_size,   method = \"optimal\",   cost = NA,   max_error = 0.05,   conf_level = 0.95,   max_iter = 1000,   currency = \"EUR\",   quiet = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_stratified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","text":"data data.frame pilot inventory data x name variable data measured (e.g. basal area, volume) strata name variable data name stratum total_area name variable data area stratum plot_size numeric vector length one plot size squared meters method charater vector length one id method. Available options optimal, cost, prop. See details cost name variable data average cost measuring one plot stratum. Used method = 'cost' sample size, message output methods max_error maximum allowed relative error conf_level confidence level max_iter maximum number iteration find plot size currency currency shown console output using method = 'cost' quiet TRUE, messages supressed","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_stratified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","text":"S7 StratifiedSampleSize object : results: data.frame main results stratum strata_error: data.frame maximum absolute error \\(\\mp\\) C.(max_abs_error, x_min, x_max), esimator typical error \\(\\mp\\) C.(sampling error, x_ci_lo, x_ci_hi) sampling_error: data.frame maximum absolute error \\(\\mp\\) C.(max_abs_error, x_min, x_max), typical sampling error weighted mean \\(\\mp\\) C.(sampling error, x_ci_lo, x_ci_hi) sampling_opts: list function options","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_stratified.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","text":"Stratified Sampling calculates number plots inventored different strata. instance, might Pinus sylvestris Pinus pinaster plots forest, might want get optimal number plots field inventory stratum, given maximum relative error (e.g. 5%), certain level confidence (e.g 95%). course, area P. sylvestris different area occupied P. pinaster. instance, total area P. sylvestris 100 ha, area P. pinaster 200 ha. Therefore, need create pilot inventory measure variable basal area maybe 5 pilot plots P. sylvestris 7 pilot plots P. pinaster. data collected, can use three stratified sample size methods: Optimal Allocation Constant Cost: using method = 'optimal'. sampling units distributed within different strata taking account size (e.g. 100 ha vs 200 ha) heterogeinity (e.g. differences basal area). minimizes number sampling units. \\(n = \\frac{t^2_{n - m} \\cdot (\\sum^{j = m}_{j = 1} P_j \\cdot s_j)^2 }{\\epsilon^2 + \\frac{t^2_{n - m} \\cdot \\sum^{j = m}_{j = 1} P_j \\cdot s_j^2}{N}}\\) Optimal Allocation Variable Cost: using method = 'cost'. method needs know cost sampling unit strata. minimize cost inventory, taking account size, heterogeinity, cost sampling unit strata. \\(n = \\frac{t^2_{n-m} \\cdot (\\sum^{j = m}_{j = 1} \\cdot P_j \\cdot s_j \\cdot \\sqrt{c_j}) \\cdot (\\sum^{j = m}_{j = 1} \\cdot \\frac{P_j \\cdot s_j}{\\sqrt{c_j}})}{\\epsilon^2 + \\frac{t^2_{n - m} \\cdot \\sum^{j = m}_{j = 1} P_j \\cdot s_j^2}{N}}\\) Proportional Allocation: using method = 'prop'. sampling units distributed proportional size strata. example, 33% estimated sampling units allocated P. sylvestris 66% P. pinaster. \\(n = \\frac{t^2_{n - m} \\cdot \\sum^{j = m}_{j = 1} P_j \\cdot s_j^2 }{\\epsilon^2 + \\frac{t^2_{n - m} \\cdot \\sum^{j = m}_{j = 1} P_j \\cdot s_j^2}{N}}\\) : n: estimated sample size t: value student's t \\(P_j\\): proportion pilot plots \\(j^{th}\\) strata \\(s_j\\): standard deviation x \\(s_j^2\\): variance x N: population size (number plots plot_size fit total_area) \\(\\epsilon\\): maximum allowed absolute error. Calculated x max_error N: size pilot inventory","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sample_size_stratified.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates sample size for a stratified sampling — silv_sample_size_stratified","text":"","code":"## read pilot inventory ficticious data data_path <- system.file(\"extdata/pilot_inventory.csv\", package = \"silviculture\") inventory_tbl <- read.csv(data_path)  ## calculate sample size sample_size_list <- silv_sample_size_stratified(   data  = inventory_tbl,   x     = basal_area,   strata = stratum,   total_area = area,   method = \"optimal\",   cost = cost,   plot_size = 100,   conf_level = .95,   max_error = .05 ) #>  #> ── Pilot inventory ───────────────────────────────────────────────────────────── #> You are estimating the sample size using a Stratified Sampling using the #> Optimal Allocation with Constant Cost method. #> • Pilot inventory: 30 plots #> • Maximum allowed error: 5% #> • Total sampling plots: 164 #> • Actual error: 4.97% #> • Total cost of the inventory: 5725 EUR #>  #> ── Operational inventory ─────────────────────────────────────────────────────── #>  #> ── Stratum - Pinus pinaster ── #>  #> • Pilot inventory with 11 plots, in 9 ha #> • Minimum sampling plots: 46 with a relative error of 3.74% (95% CI [62.56, #>   67.42]) #> • Sampling effort: 5.1 plots/ha #> • Cost per hectare: 255 EUR/ha #> • Total cost: 2300 EUR #>  #>  #> ── Stratum - Pinus radiata ── #>  #> • Pilot inventory with 8 plots, in 12 ha #> • Minimum sampling plots: 71 with a relative error of 4.12% (95% CI [52.85, #>   57.39]) #> • Sampling effort: 5.9 plots/ha #> • Cost per hectare: 206.5 EUR/ha #> • Total cost: 2485 EUR #>  #>  #> ── Stratum - Pinus sylvestris ── #>  #> • Pilot inventory with 11 plots, in 7 ha #> • Minimum sampling plots: 47 with a relative error of 5.6% (95% CI [52.85, #>   59.13]) #> • Sampling effort: 6.7 plots/ha #> • Cost per hectare: 134 EUR/ha #> • Total cost: 940 EUR #>"},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Hart or Hart-Becking spacing index — silv_spacing_index","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"Calculates Hart Index Hart-Becking Index even-aged stands","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"","code":"silv_spacing_index(h0, ntrees, which = \"hart\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"h0 Numeric vector dominant height ntrees Numeric vector number trees dominant height per hectare character name index (either hart hart-brecking). See details","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"spacing index can used determine whether thinning needed , also determine intense . Hart Index: assumes even-aged stands square planting pattern. Hart-Brecking Index: assumes triangular planting pattern.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"Assmann, E. (1970) principles forest yield study: Studies organic production, structure, increment, yield forest stands. Pergamon Press, Oxford.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_spacing_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hart or Hart-Becking spacing index — silv_spacing_index","text":"","code":"library(dplyr) ## Calculate spacing index for each plot inventory_samples |>   summarise(     h0     = silv_dominant_height(diameter, height),     ntrees = n(),     .by    = plot_id   ) |>   ## calculate number of trees per hectare   mutate(ntrees_ha = silv_ntrees_ha(ntrees, plot_size = 14.1)) |>   mutate(spacing = silv_spacing_index(h0, ntrees_ha)) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `spacing = silv_spacing_index(h0, ntrees_ha)`. #> Caused by warning: #> ! `silv_spacing_index()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_spacing_index() is deprecated in favour of #>   `silv_density_hart()`, and it will be removed in the next release. #> # A tibble: 5 × 5 #>   plot_id    h0 ntrees ntrees_ha spacing #>     <int> <dbl>  <int>     <dbl>   <dbl> #> 1       7 17.4      16      256.    35.9 #> 2       8  7.21     22      352.    73.9 #> 3      10 13.0      25      400.    38.4 #> 4      53 21.3      19      304.    26.9 #> 5     189 11.0      80     1281.    25.4"},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silv_sqrmean_diameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the quadratic mean diameter (QMD) — silv_sqrmean_diameter","text":"","code":"silv_sqrmean_diameter(diameter, ntrees = NULL)"},{"path":"https://cidree.github.io/silviculture/reference/silv_sqrmean_diameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the quadratic mean diameter (QMD) — silv_sqrmean_diameter","text":"diameter Numeric vector diameters diameter classes ntrees Numeric vector number trees diameter class per hectare. ntrees = NULL, function assume diameter corresponds one tree. Therefore, QMD calculated individual tree","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sqrmean_diameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the quadratic mean diameter (QMD) — silv_sqrmean_diameter","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_sqrmean_diameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the quadratic mean diameter (QMD) — silv_sqrmean_diameter","text":"","code":"## calculate dg for inventory data grouped by plot_id and species library(dplyr) inventory_samples |> mutate(dclass = silv_diametric_class(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_ntrees_ha(ntrees, plot_size = 10),     h0        = silv_dominant_height(dclass, height, ntrees_ha),     dg        = silv_sqrmean_diameter(dclass, ntrees_ha),     .by       = c(plot_id, species)   ) #> # A tibble: 57 × 8 #>    plot_id species dclass height ntrees ntrees_ha    h0    dg #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl> <dbl> #>  1       7      27     50  18         3      95.5 19.7   57.9 #>  2       7      27     55  17.6       5     159.  19.7   57.9 #>  3       7      27     35  16.5       1      31.8 19.7   57.9 #>  4       7      27     45  14.6       2      63.7 19.7   57.9 #>  5       7      27     60  19.1       3      95.5 19.7   57.9 #>  6       7      27     25  12.9       1      31.8 19.7   57.9 #>  7       7      27    120  20.9       1      31.8 19.7   57.9 #>  8       8      83     20   5.10      3      95.5  5.15  15.1 #>  9       8      83     10   6.10      4     127.   5.15  15.1 #> 10       8      28     55  15.5       1      31.8 17.5   57.6 #> # ℹ 47 more rows  ## calculate dg for a vector of diameters silv_sqrmean_diameter(c(12.5, 23.5, 14, 16, 18.5)) #> [1] 17.33638"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_basal_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Basal Area — silv_stand_basal_area","title":"Calculates Basal Area — silv_stand_basal_area","text":"Calculates Basal Area square meters.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_basal_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Basal Area — silv_stand_basal_area","text":"","code":"silv_stand_basal_area(diameter, ntrees = NULL, units = \"cm\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_basal_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Basal Area — silv_stand_basal_area","text":"diameter Numeric vector diameters diameter classes ntrees Numeric vector number trees diameter class per hectare. ntrees = NULL, function assume diameter corresponds one tree units units diameter (one mm, cm, dm, m)","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_basal_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Basal Area — silv_stand_basal_area","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_basal_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Basal Area — silv_stand_basal_area","text":"function uses next formula: \\(G = \\frac{\\pi}{40000} \\cdot D^2 \\cdot \\text{ntrees}\\) G basal area \\(m^2\\), D diameter cm. ntrees number trees per hectare, result \\(m^2/ha\\). recommended use squared mean diameter calculated silv_stand_qmean_diameter(). Note ntrees = NULL, output function exactly silv_tree_basal_area().","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_basal_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Basal Area — silv_stand_basal_area","text":"","code":"## calculate G for inventory data grouped by plot_id and species library(dplyr) inventory_samples |> mutate(dclass = silv_tree_dclass(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_density_ntrees_ha(ntrees, plot_size = 10),     dg        = silv_stand_qmean_diameter(dclass, ntrees_ha),     g         = silv_stand_basal_area(dclass, ntrees_ha),     .by       = c(plot_id, species)   ) #> # A tibble: 57 × 8 #>    plot_id species dclass height ntrees ntrees_ha    dg       g #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl>   <dbl> #>  1       7      27     50  18         3      95.5  57.9 0.196   #>  2       7      27     55  17.6       5     159.   57.9 0.238   #>  3       7      27     35  16.5       1      31.8  57.9 0.0962  #>  4       7      27     45  14.6       2      63.7  57.9 0.159   #>  5       7      27     60  19.1       3      95.5  57.9 0.283   #>  6       7      27     25  12.9       1      31.8  57.9 0.0491  #>  7       7      27    120  20.9       1      31.8  57.9 1.13    #>  8       8      83     20   5.10      3      95.5  15.1 0.0314  #>  9       8      83     10   6.10      4     127.   15.1 0.00785 #> 10       8      28     55  15.5       1      31.8  57.6 0.238   #> # ℹ 47 more rows"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_diameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the dominant diameter — silv_stand_dominant_diameter","title":"Calculates the dominant diameter — silv_stand_dominant_diameter","text":"Calculates dominant diameter using Assman Friedrich method, Weise method","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_diameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the dominant diameter — silv_stand_dominant_diameter","text":"","code":"silv_stand_dominant_diameter(   diameter,   ntrees = NULL,   which = \"assman\",   quiet = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_diameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the dominant diameter — silv_stand_dominant_diameter","text":"diameter Numeric vector diameter classes ntrees Optional. Numeric vector number trees per hectare. Use argument aggregated data diametric classes (see details). method calculate dominant diameter (see details) quiet TRUE, messages supressed","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_diameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the dominant diameter — silv_stand_dominant_diameter","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_diameter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the dominant diameter — silv_stand_dominant_diameter","text":"dominant diameter \\(D_0\\) mean diameter 100 thickest trees per hectare. Therefore, diameter ntrees vectors length. Assman: calculates \\(D_0\\) mean diameter 100 thickest trees per hectare Weise: calculates \\(D_0\\) quadratic mean diameter 20% thickest trees per hectare","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_diameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the dominant diameter — silv_stand_dominant_diameter","text":"","code":"## calculate d0 for inventory data grouped by plot_id and species library(dplyr) inventory_samples |> mutate(dclass = silv_tree_dclass(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_density_ntrees_ha(ntrees, plot_size = 10),     d0        = silv_stand_dominant_diameter(dclass, ntrees_ha),     .by       = c(plot_id, species)   ) #> # A tibble: 57 × 7 #>    plot_id species dclass height ntrees ntrees_ha    d0 #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl> #>  1       7      27     50  18         3      95.5  79.1 #>  2       7      27     55  17.6       5     159.   79.1 #>  3       7      27     35  16.5       1      31.8  79.1 #>  4       7      27     45  14.6       2      63.7  79.1 #>  5       7      27     60  19.1       3      95.5  79.1 #>  6       7      27     25  12.9       1      31.8  79.1 #>  7       7      27    120  20.9       1      31.8  79.1 #>  8       8      83     20   5.10      3      95.5  19.5 #>  9       8      83     10   6.10      4     127.   19.5 #> 10       8      28     55  15.5       1      31.8  57.5 #> # ℹ 47 more rows"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the dominant height — silv_stand_dominant_height","title":"Calculates the dominant height — silv_stand_dominant_height","text":"Calculates dominant height using Assman equation Hart equation","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the dominant height — silv_stand_dominant_height","text":"","code":"silv_stand_dominant_height(diameter, height, ntrees = NULL, which = \"assman\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the dominant height — silv_stand_dominant_height","text":"diameter Numeric vector diameter classes height Numeric vector averaged heights diameter class ntrees Optional. Numeric vector number trees per hectare. Use argument aggregated data diametric classes (see details). method calculate dominant height (see details)","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the dominant height — silv_stand_dominant_height","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the dominant height — silv_stand_dominant_height","text":"dominant height \\(H_0\\) mean height dominant trees, less affected overall mean height thinning treatments. Assman: calculates \\(H_0\\) mean height 100 thickest trees per hectare Hart: calculates \\(H_0\\) mean height 100 tallest trees per hectare ntrees = NULL, function assume diameter height belongs one tree. data aggregated hectare, use number trees per hectare argument.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the dominant height — silv_stand_dominant_height","text":"Assmann, E. (1970) principles forest yield study: Studies organic production, structure, increment, yield forest stands. Pergamon Press, Oxford.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_dominant_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the dominant height — silv_stand_dominant_height","text":"","code":"## calculate h0 for inventory data grouped by plot_id and species library(dplyr) inventory_samples |> mutate(dclass = silv_tree_dclass(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_density_ntrees_ha(ntrees, plot_size = 10),     h0        = silv_stand_dominant_height(dclass, height, ntrees_ha),     .by       = c(plot_id, species)   ) #> # A tibble: 57 × 7 #>    plot_id species dclass height ntrees ntrees_ha    h0 #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl> #>  1       7      27     50  18         3      95.5 19.7  #>  2       7      27     55  17.6       5     159.  19.7  #>  3       7      27     35  16.5       1      31.8 19.7  #>  4       7      27     45  14.6       2      63.7 19.7  #>  5       7      27     60  19.1       3      95.5 19.7  #>  6       7      27     25  12.9       1      31.8 19.7  #>  7       7      27    120  20.9       1      31.8 19.7  #>  8       8      83     20   5.10      3      95.5  5.15 #>  9       8      83     10   6.10      4     127.   5.15 #> 10       8      28     55  15.5       1      31.8 17.5  #> # ℹ 47 more rows"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_lorey_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Lorey's Height — silv_stand_lorey_height","title":"Calculates Lorey's Height — silv_stand_lorey_height","text":"Tree's mean height weighted basal area","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_lorey_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Lorey's Height — silv_stand_lorey_height","text":"","code":"silv_stand_lorey_height(height, g, ntrees = NULL)"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_lorey_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Lorey's Height — silv_stand_lorey_height","text":"height Numeric vector heights g Numeric vector basal areas ntrees Optional. Numeric vector number trees per hectare. Use argument aggregated data diametric classes (see details).","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_lorey_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Lorey's Height — silv_stand_lorey_height","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_lorey_height.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Lorey's Height — silv_stand_lorey_height","text":"function calculates Lorey's mean height according : $$h_L = \\frac{\\sum n_i g_i h_i}{\\sum n_i g_i}$$ ntrees provided (.e. ntrees = NULL) formula simply weighted mean provided heights basal areas: $$h_L = \\frac{\\sum g_i h_i}{\\sum g_i}$$","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_lorey_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Lorey's Height — silv_stand_lorey_height","text":"","code":"## Calculate Lorey's Height by plot and species library(dplyr) inventory_samples |>   mutate(g = silv_tree_basal_area(diameter)) |>   summarise(     lh  = silv_stand_lorey_height(height, g),     .by = c(plot_id, species)   ) #> # A tibble: 14 × 3 #>    plot_id species    lh #>      <int>   <int> <dbl> #>  1       7      27 18.5  #>  2       8      83  5.46 #>  3       8      28 17.7  #>  4       8     294  6.95 #>  5       8      81  6.14 #>  6      10      81  7.51 #>  7      10      72 14.2  #>  8      10      83  6.37 #>  9      10      27 28.6  #> 10      53      27 23.5  #> 11     189      81 12.6  #> 12     189      84 12.9  #> 13     189      82 10.9  #> 14     189      83  9.49"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_qmean_diameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the quadratic mean diameter (QMD) — silv_stand_qmean_diameter","title":"Calculates the quadratic mean diameter (QMD) — silv_stand_qmean_diameter","text":"Calculates quadratic mean diameter (QMD)","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_qmean_diameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the quadratic mean diameter (QMD) — silv_stand_qmean_diameter","text":"","code":"silv_stand_qmean_diameter(diameter, ntrees = NULL)"},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_qmean_diameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the quadratic mean diameter (QMD) — silv_stand_qmean_diameter","text":"diameter Numeric vector diameters diameter classes ntrees Numeric vector number trees diameter class per hectare. ntrees = NULL, function assume diameter corresponds one tree.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_qmean_diameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the quadratic mean diameter (QMD) — silv_stand_qmean_diameter","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_stand_qmean_diameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the quadratic mean diameter (QMD) — silv_stand_qmean_diameter","text":"","code":"## calculate dg for inventory data grouped by plot_id and species library(dplyr) inventory_samples |> mutate(dclass = silv_tree_dclass(diameter)) |>   summarise(     height = mean(height, na.rm = TRUE),     ntrees = n(),     .by    = c(plot_id, species, dclass)   ) |>   mutate(     ntrees_ha = silv_density_ntrees_ha(ntrees, plot_size = 10),     h0        = silv_stand_dominant_height(dclass, height, ntrees_ha),     dg        = silv_stand_qmean_diameter(dclass, ntrees_ha),     .by       = c(plot_id, species)   ) #> # A tibble: 57 × 8 #>    plot_id species dclass height ntrees ntrees_ha    h0    dg #>      <int>   <int>  <dbl>  <dbl>  <int>     <dbl> <dbl> <dbl> #>  1       7      27     50  18         3      95.5 19.7   57.9 #>  2       7      27     55  17.6       5     159.  19.7   57.9 #>  3       7      27     35  16.5       1      31.8 19.7   57.9 #>  4       7      27     45  14.6       2      63.7 19.7   57.9 #>  5       7      27     60  19.1       3      95.5 19.7   57.9 #>  6       7      27     25  12.9       1      31.8 19.7   57.9 #>  7       7      27    120  20.9       1      31.8 19.7   57.9 #>  8       8      83     20   5.10      3      95.5  5.15  15.1 #>  9       8      83     10   6.10      4     127.   5.15  15.1 #> 10       8      28     55  15.5       1      31.8 17.5   57.6 #> # ℹ 47 more rows  ## calculate dg for a vector of diameters silv_stand_qmean_diameter(c(12.5, 23.5, 14, 16, 18.5)) #> [1] 17.33638"},{"path":"https://cidree.github.io/silviculture/reference/silv_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates a bunch of forest metrics — silv_summary","title":"Calculates a bunch of forest metrics — silv_summary","text":"Summarize forest inventory data calculating typical variables","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates a bunch of forest metrics — silv_summary","text":"","code":"silv_summary(   data,   diameter,   height,   plot_size,   .groups = NULL,   plot_shape = \"circular\",   dmin = 7.5,   dmax = NULL,   class_length = 5,   include_lowest = TRUE,   which_h0 = \"assman\",   which_spacing = \"hart\" )"},{"path":"https://cidree.github.io/silviculture/reference/silv_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates a bunch of forest metrics — silv_summary","text":"data tibble inventory data diameter column inventory diameters height column inventory heights plot_size size plot. See silv_density_ntrees_ha() .groups character vector variables group (e.g. plot id, tree species, etc) plot_shape shape sampling plot. Either circular rectangular dmin minimum inventory diameter centimeters dmax maximum inventory diameter centimeters. Values greater dmax included greatest class class_length length class centimeters include_lowest Logical. TRUE (default), intervals [dim1, dim2). FALSE, intervals (dim1, dim2] [dim1, dim2). FALSE, intervals (dim1, dim2]: R:dim1,%20dim2)%60.%20If%20FALSE,%20the%20intervals%20are%20%60(dim1,%20dim2 which_h0 method calculate dominant height. See silv_stand_dominant_height() which_spacing character name index (either hart hart-brecking). See silv_density_hart()","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates a bunch of forest metrics — silv_summary","text":"S7 Inventory list 2 tibbles","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates a bunch of forest metrics — silv_summary","text":"function calculates many inventory parameters returns two tibbles: dclass_metrics: metrics summarized .groups diametric classes group_metrics: metrics summarized .groups","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates a bunch of forest metrics — silv_summary","text":"","code":"silv_summary(   data      = inventory_samples,   diameter  = diameter,   height    = height,   plot_size = 10,   .groups   = c(\"plot_id\", \"species\")  ) #> <silviculture::Inventory> #>  @ dclass_metrics: tibble [57 × 9] (S3: tbl_df/tbl/data.frame) #>  $ plot_id  : int [1:57] 7 7 7 7 7 7 7 8 8 8 ... #>  $ species  : int [1:57] 27 27 27 27 27 27 27 28 28 81 ... #>  $ dclass   : num [1:57] 50 55 35 45 60 25 120 55 60 10 ... #>  $ height   : num [1:57] 18 17.6 16.5 14.6 19.1 ... #>  $ ntrees   : int [1:57] 3 5 1 2 3 1 1 1 1 3 ... #>  $ ntrees_ha: num [1:57] 95.5 159.2 31.8 63.7 95.5 ... #>  $ h0       : num [1:57] 19.7 19.7 19.7 19.7 19.7 ... #>  $ dg       : num [1:57] 57.9 57.9 57.9 57.9 57.9 ... #>  $ g_ha     : num [1:57] 0.1963 0.2376 0.0962 0.159 0.2827 ... #>  @ group_metrics : tibble [14 × 15] (S3: tbl_df/tbl/data.frame) #>  $ plot_id  : int [1:14] 7 8 8 8 8 10 10 10 10 53 ... #>  $ species  : int [1:14] 27 28 81 83 294 27 72 81 83 27 ... #>  $ d_mean   : num [1:14] 54.7 57.5 15 14.3 14 ... #>  $ d_median : num [1:14] 55 55 15 10 15 85 35 15 15 40 ... #>  $ d_sd     : num [1:14] 19.16 2.5 6.12 4.95 2 ... #>  $ dg       : num [1:14] 57.9 57.6 16.2 15.1 14.1 ... #>  $ h_mean   : num [1:14] 17.42 17.5 6.29 5.67 6.74 ... #>  $ h_median : num [1:14] 17.64 15.5 5.87 6.1 7.12 ... #>  $ h_sd     : num [1:14] 1.924 2 0.525 0.495 0.77 ... #>  $ h_lorey  : num [1:14] 18.54 17.67 6.11 5.35 6.93 ... #>  $ h0       : num [1:14] 19.65 17.5 6.39 5.15 7.12 ... #>  $ ntrees   : int [1:14] 16 2 8 7 5 6 4 10 5 19 ... #>  $ ntrees_ha: num [1:14] 509.3 63.7 254.6 222.8 159.2 ... #>  $ g_ha     : num [1:14] 2.152 0.5203 0.0962 0.0393 0.0255 ... #>  $ spacing  : num [1:14] 22.6 71.6 98.1 130.2 111.3 ... #>  @ groups        : chr [1:2] \"plot_id\" \"species\""},{"path":"https://cidree.github.io/silviculture/reference/silv_treatment_thinning.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","title":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","text":"Calculates thinning schemes forest management selecting trees extract based specified criteria. Supports thinning (removing smaller trees) thinning (removing larger trees) approaches.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_treatment_thinning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","text":"","code":"silv_treatment_thinning(   data,   var,   diameter,   ntrees,   thinning = \"below\",   perc = 0.3,   .groups = NULL )"},{"path":"https://cidree.github.io/silviculture/reference/silv_treatment_thinning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","text":"data data frame, silviculture::Inventory object. See details. var variable used calculating thinning. Typically used variables basal area, number trees, volume diameter Numeric vector diametric classes ntrees Numeric vector number trees per hectare diametric class thinning Charater string specifying thinning type. Available options perc Numeric value 0 1 specifying percentage var extract .groups character vector variables group (e.g. plot id, tree species, etc). Ignored using silviculture::Inventory object","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_treatment_thinning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","text":"silviculture::Thinning object three items: data: input data two new columns group_metrics: include data silviculture::Inventory object thinning_opts: options used S7 methods","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_treatment_thinning.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","text":"function implements common silvicultural thinning practices: Thinning : Removes trees lowest values specified variable. approach typically removes suppressed, damaged, poor-quality trees, mimicking natural mortality processes. Thinning : Removes trees highest values specified variable. approach harvests valuable trees leaving smaller trees continue growing. function calculates trees extract based ranking specified variable desired thinning percentage. grouping variables provided, thinning calculated separately group. Using silviculture::Inventory object result silv_summary() can used data argument. , .groups taken object, keep previous data new S7 object.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silv_treatment_thinning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Forestry Thinning Schemes — silv_treatment_thinning","text":"","code":"# Get summary of inventory data inventory <- inventory_samples |>  silv_summary(    diameter  = diameter,    height    = height,    plot_size = 25,    .groups   = c('plot_id', 'species')  )  ## Thinning from below removing 30% of trees based on basal area silv_treatment_thinning(   data     = inventory,   var      = g_ha,   diameter = dclass,   ntrees   = ntrees_ha,   thinning = \"below\",   perc     = 0.3 ) #> <silviculture::Thinning> #>  @ data         : tibble [57 × 11] (S3: tbl_df/tbl/data.frame) #>  $ plot_id          : int [1:57] 7 7 7 7 7 7 7 8 8 8 ... #>  $ species          : int [1:57] 27 27 27 27 27 27 27 28 28 81 ... #>  $ dclass           : num [1:57] 25 35 45 50 55 60 120 55 60 10 ... #>  $ height           : num [1:57] 12.9 16.5 14.6 18 17.6 ... #>  $ ntrees           : int [1:57] 1 1 2 3 5 3 1 1 1 3 ... #>  $ ntrees_ha        : num [1:57] 5.09 5.09 10.19 15.28 25.46 ... #>  $ h0               : num [1:57] 17.4 17.4 17.4 17.4 17.4 ... #>  $ dg               : num [1:57] 57.9 57.9 57.9 57.9 57.9 ... #>  $ g_ha             : num [1:57] 0.0491 0.0962 0.159 0.1963 0.2376 ... #>  $ g_ha_extract     : num [1:57] 0.0491 0.0962 0.159 0.1963 0.1449 ... #>  $ ntrees_ha_extract: num [1:57] 5.09 5.09 10.19 15.28 15.53 ... #>  @ group_metrics: tibble [14 × 15] (S3: tbl_df/tbl/data.frame) #>  $ plot_id  : int [1:14] 7 8 8 8 8 10 10 10 10 53 ... #>  $ species  : int [1:14] 27 28 81 83 294 27 72 81 83 27 ... #>  $ d_mean   : num [1:14] 54.7 57.5 15 14.3 14 ... #>  $ d_median : num [1:14] 55 55 15 10 15 85 35 15 15 40 ... #>  $ d_sd     : num [1:14] 19.16 2.5 6.12 4.95 2 ... #>  $ dg       : num [1:14] 57.9 57.6 16.2 15.1 14.1 ... #>  $ h_mean   : num [1:14] 17.42 17.5 6.29 5.67 6.74 ... #>  $ h_median : num [1:14] 17.64 15.5 5.87 6.1 7.12 ... #>  $ h_sd     : num [1:14] 1.924 2 0.525 0.495 0.77 ... #>  $ h_lorey  : num [1:14] 18.54 17.67 6.11 5.35 6.93 ... #>  $ h0       : num [1:14] 17.42 17.5 6.29 5.67 6.74 ... #>  $ ntrees   : int [1:14] 16 2 8 7 5 6 4 10 5 19 ... #>  $ ntrees_ha: num [1:14] 81.5 10.2 40.7 35.7 25.5 ... #>  $ g_ha     : num [1:14] 2.152 0.5203 0.0962 0.0393 0.0255 ... #>  $ spacing  : num [1:14] 63.6 179 249.2 295.3 294 ... #>  @ thinning_opts:List of 5 #>  .. $ var_name   : chr \"g_ha_extract\" #>  .. $ dclass_name: chr \"dclass\" #>  .. $ thinning   : chr \"below\" #>  .. $ percentage : num 0.3 #>  .. $ groups     : chr [1:2] \"plot_id\" \"species\"  ## Thinning from above removing 20% of trees based on basal area silv_treatment_thinning(   data     = inventory,   var      = g_ha,   diameter = dclass,   ntrees   = ntrees_ha,   thinning = \"above\",   perc     = 0.2 ) #> <silviculture::Thinning> #>  @ data         : tibble [57 × 11] (S3: tbl_df/tbl/data.frame) #>  $ plot_id          : int [1:57] 7 7 7 7 7 7 7 8 8 8 ... #>  $ species          : int [1:57] 27 27 27 27 27 27 27 28 28 81 ... #>  $ dclass           : num [1:57] 120 60 55 50 45 35 25 60 55 30 ... #>  $ height           : num [1:57] 20.9 19.1 17.6 18 14.6 ... #>  $ ntrees           : int [1:57] 1 3 5 3 2 1 1 1 1 1 ... #>  $ ntrees_ha        : num [1:57] 5.09 15.28 25.46 15.28 10.19 ... #>  $ h0               : num [1:57] 17.4 17.4 17.4 17.4 17.4 ... #>  $ dg               : num [1:57] 57.9 57.9 57.9 57.9 57.9 ... #>  $ g_ha             : num [1:57] 1.131 0.283 0.238 0.196 0.159 ... #>  $ g_ha_extract     : num [1:57] 0.43 0 0 0 0 ... #>  $ ntrees_ha_extract: num [1:57] 1.94 0 0 0 0 ... #>  @ group_metrics: tibble [14 × 15] (S3: tbl_df/tbl/data.frame) #>  $ plot_id  : int [1:14] 7 8 8 8 8 10 10 10 10 53 ... #>  $ species  : int [1:14] 27 28 81 83 294 27 72 81 83 27 ... #>  $ d_mean   : num [1:14] 54.7 57.5 15 14.3 14 ... #>  $ d_median : num [1:14] 55 55 15 10 15 85 35 15 15 40 ... #>  $ d_sd     : num [1:14] 19.16 2.5 6.12 4.95 2 ... #>  $ dg       : num [1:14] 57.9 57.6 16.2 15.1 14.1 ... #>  $ h_mean   : num [1:14] 17.42 17.5 6.29 5.67 6.74 ... #>  $ h_median : num [1:14] 17.64 15.5 5.87 6.1 7.12 ... #>  $ h_sd     : num [1:14] 1.924 2 0.525 0.495 0.77 ... #>  $ h_lorey  : num [1:14] 18.54 17.67 6.11 5.35 6.93 ... #>  $ h0       : num [1:14] 17.42 17.5 6.29 5.67 6.74 ... #>  $ ntrees   : int [1:14] 16 2 8 7 5 6 4 10 5 19 ... #>  $ ntrees_ha: num [1:14] 81.5 10.2 40.7 35.7 25.5 ... #>  $ g_ha     : num [1:14] 2.152 0.5203 0.0962 0.0393 0.0255 ... #>  $ spacing  : num [1:14] 63.6 179 249.2 295.3 294 ... #>  @ thinning_opts:List of 5 #>  .. $ var_name   : chr \"g_ha_extract\" #>  .. $ dclass_name: chr \"dclass\" #>  .. $ thinning   : chr \"above\" #>  .. $ percentage : num 0.2 #>  .. $ groups     : chr [1:2] \"plot_id\" \"species\""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_basal_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Basal Area — silv_tree_basal_area","title":"Calculates Basal Area — silv_tree_basal_area","text":"Calculates Basal Area square meters.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_basal_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Basal Area — silv_tree_basal_area","text":"","code":"silv_tree_basal_area(diameter, units = \"cm\")"},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_basal_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Basal Area — silv_tree_basal_area","text":"diameter Numeric vector diameters diameter classes units units diameter (one mm, cm, dm, m)","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_basal_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Basal Area — silv_tree_basal_area","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_basal_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Basal Area — silv_tree_basal_area","text":"function uses next formula: \\(g = \\frac{\\pi}{40000} \\cdot D^2\\) g basal area \\(m^2\\) one tree, D diameter cm. want calculate basal area group trees (e.g. per hectares), please use silv_stand_basal_area()","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_basal_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Basal Area — silv_tree_basal_area","text":"","code":"## calculate individual basal area silv_tree_basal_area(c(23, 11, 43.5, 94)) #> [1] 0.041547563 0.009503318 0.148616967 0.693977817"},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_dclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify diameters in classes — silv_tree_dclass","title":"Classify diameters in classes — silv_tree_dclass","text":"Classifies measured diameters classes specified length","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_dclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify diameters in classes — silv_tree_dclass","text":"","code":"silv_tree_dclass(   diameter,   dmin = 7.5,   dmax = NULL,   class_length = 5,   include_lowest = TRUE,   return_intervals = FALSE )"},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_dclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify diameters in classes — silv_tree_dclass","text":"diameter numeric vector diameters dmin minimum inventory diameter centimeters dmax maximum inventory diameter centimeters. Values greater dmax included greatest class class_length length class centimeters include_lowest Logical. TRUE (default), intervals [dim1, dim2). FALSE, intervals (dim1, dim2] [dim1, dim2). FALSE, intervals (dim1, dim2]: R:dim1,%20dim2)%60.%20If%20FALSE,%20the%20intervals%20are%20%60(dim1,%20dim2 return_intervals FALSE, returns intervals. Otherwise (default), returns class center","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_dclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify diameters in classes — silv_tree_dclass","text":"numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_dclass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify diameters in classes — silv_tree_dclass","text":"","code":"library(dplyr) inventory_samples |>   mutate(dclass = silv_tree_dclass(diameter)) #> # A tibble: 162 × 5 #>    plot_id species diameter height dclass #>      <int>   <int>    <dbl>  <dbl>  <dbl> #>  1       7      27     50.6   18.9     50 #>  2       7      27     57.2   19.8     55 #>  3       7      27     36.4   16.5     35 #>  4       7      27     46.4   18.5     45 #>  5       7      27     55.5   19.5     55 #>  6       7      27     59.5   17.7     60 #>  7       7      27     24.3   12.9     25 #>  8       7      27     50.5   16.6     50 #>  9       7      27     55.3   19.3     55 #> 10       7      27     48.6   18.5     50 #> # ℹ 152 more rows"},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tree Volume — silv_tree_volume","title":"Calculate Tree Volume — silv_tree_volume","text":"function calculates volume tree logs using different formulas: Pressler, Huber, Smalian, Newton. appropriate diameter height parameters must provided depending selected formula.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tree Volume — silv_tree_volume","text":"","code":"silv_tree_volume(   diameter_base = NULL,   diameter_top = NULL,   diameter_center = NULL,   diameter = NULL,   height = NULL,   formula = \"pressler\",   ntrees = NULL )"},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tree Volume — silv_tree_volume","text":"diameter_base numeric vector. diameter base tree (required Pressler, Smalian, Newton formulas). diameter_top numeric vector. diameter top tree (required Smalian Newton formulas). diameter_center numeric vector. diameter center tree (required Huber Newton formulas). diameter numeric vector. diameter breast height (used Pressler formula provided instead diameter_base). height numeric vector. tree log height (required formulas). formula Character. volume formula use. Options: \"pressler\", \"huber\", \"smalian\", \"newton\". Default \"pressler\". ntrees numeric vector number trees dimensions. Default 1.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tree Volume — silv_tree_volume","text":"numeric value representing tree volume.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_tree_volume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Tree Volume — silv_tree_volume","text":"","code":"silv_tree_volume(diameter_base = 30, height = 20, formula = \"pressler\") #> ! When using Pressler formula, the height is assumed to be Pressler directrix point (i.e., the height at which the diameter of the stem is half the diameter in the base of the tree). #> ℹ Since v. 0.2.0 the diameter is assumed to be in centimeters. #> [1] 0.9424778 silv_tree_volume(diameter_center = 25, height = 15, formula = \"huber\") #> ℹ Since v. 0.2.0 the diameter is assumed to be in centimeters. #> [1] 0.7363108 silv_tree_volume(diameter_base = 30, diameter_top = 20, height = 20, formula = \"smalian\") #> ℹ Since v. 0.2.0 the diameter is assumed to be in centimeters. #> [1] 1.021018"},{"path":"https://cidree.github.io/silviculture/reference/silv_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tree Volume — silv_volume","title":"Calculate Tree Volume — silv_volume","text":"function calculates volume tree logs using different formulas: Pressler, Huber, Smalian, Newton. appropriate diameter height parameters must provided depending selected formula.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tree Volume — silv_volume","text":"","code":"silv_volume(   diameter_base = NULL,   diameter_top = NULL,   diameter_center = NULL,   diameter = NULL,   height = NULL,   formula = \"pressler\",   ntrees = NULL )"},{"path":"https://cidree.github.io/silviculture/reference/silv_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tree Volume — silv_volume","text":"diameter_base numeric vector. diameter base tree (required Pressler, Smalian, Newton formulas). diameter_top numeric vector. diameter top tree (required Smalian Newton formulas). diameter_center numeric vector. diameter center tree (required Huber Newton formulas). diameter numeric vector. diameter breast height (used Pressler formula provided instead diameter_base). height numeric vector. tree log height (required formulas). formula Character. volume formula use. Options: \"pressler\", \"huber\", \"smalian\", \"newton\". Default \"pressler\". ntrees numeric vector number trees dimensions. Default 1.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tree Volume — silv_volume","text":"numeric value representing tree volume.","code":""},{"path":"https://cidree.github.io/silviculture/reference/silv_volume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Tree Volume — silv_volume","text":"","code":"silv_volume(diameter_base = 30, height = 20, formula = \"pressler\") #> Warning: `silv_volume()` was deprecated in silviculture 0.2.0. #> ℹ Function `silv_volume() is deprecated in favour of `silv_tree_volume()`, and #>   it will be removed in the next release. #> ! When using Pressler formula, the height is assumed to be Pressler directrix point (i.e., the height at which the diameter of the stem is half the diameter in the base of the tree). #> ℹ Since v. 0.2.0 the diameter is assumed to be in centimeters. #> [1] 0.9424778 silv_volume(diameter_center = 25, height = 15, formula = \"huber\") #> ℹ Since v. 0.2.0 the diameter is assumed to be in centimeters. #> [1] 0.7363108 silv_volume(diameter_base = 30, diameter_top = 20, height = 20, formula = \"smalian\") #> ℹ Since v. 0.2.0 the diameter is assumed to be in centimeters. #> [1] 1.021018"},{"path":"https://cidree.github.io/silviculture/reference/silviculture-package.html","id":null,"dir":"Reference","previous_headings":"","what":"silviculture: Utility Functions for Forest Inventory and Silviculture — silviculture-package","title":"silviculture: Utility Functions for Forest Inventory and Silviculture — silviculture-package","text":"Perform common dendrometry operations inventory preparing, inventory data analysis.","code":""},{"path":[]},{"path":"https://cidree.github.io/silviculture/reference/silviculture-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"silviculture: Utility Functions for Forest Inventory and Silviculture — silviculture-package","text":"Maintainer: Adrián Cidre González adrian.cidre@gmail.com Authors: Aitor Vázquez Veloso aitor.vazquez.veloso@uva.es","code":""},{"path":"https://cidree.github.io/silviculture/reference/weighted_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates weighted mean — weighted_median","title":"Calculates weighted mean — weighted_median","text":"Calculates weighted mean","code":""},{"path":"https://cidree.github.io/silviculture/reference/weighted_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates weighted mean — weighted_median","text":"","code":"weighted_median(var, wt)"},{"path":"https://cidree.github.io/silviculture/reference/weighted_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates weighted mean — weighted_median","text":"var object containing values whose weighted median computed wt numerical vector weights length x giving weights use elements x","code":""},{"path":"https://cidree.github.io/silviculture/reference/weighted_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates weighted mean — weighted_median","text":"length-one numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/reference/weighted_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates weighted standard deviation — weighted_sd","title":"Calculates weighted standard deviation — weighted_sd","text":"Calculates weighted standard deviation","code":""},{"path":"https://cidree.github.io/silviculture/reference/weighted_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates weighted standard deviation — weighted_sd","text":"","code":"weighted_sd(var, wt)"},{"path":"https://cidree.github.io/silviculture/reference/weighted_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates weighted standard deviation — weighted_sd","text":"var object containing values whose weighted median computed wt numerical vector weights length x giving weights use elements x","code":""},{"path":"https://cidree.github.io/silviculture/reference/weighted_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates weighted standard deviation — weighted_sd","text":"length-one numeric vector","code":""},{"path":"https://cidree.github.io/silviculture/news/index.html","id":"silviculture-020","dir":"Changelog","previous_headings":"","what":"silviculture 0.2.0","title":"silviculture 0.2.0","text":"new version brings new naming conventions useful sorting package “modules” related functions. silv_tree_*(): tree-level metrics (although can also used stand-level using ntrees argument). silv_stand_*(): stand plot-level metrics silv_predict_*(): predictions based models old functions now deprecated eliminated future release.","code":""},{"path":"https://cidree.github.io/silviculture/news/index.html","id":"new-functions-0-2-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"silviculture 0.2.0","text":"silv_density_sdi(): calculates Stand Density Index silv_predict_height(): estimates height diameter, using -called h-d curves. argument equation allows choose equations use. Currently, eq_hd_aitor2025() available. silv_stand_dominant_diameter(): calculates dominant diameter using two methods: Assman: mean diameter 100 thickest trees per hectare Weise: quadratic mean diameter 20% thickest trees per hectare eq_biomass_*(): equations used inside model argument silv_predict_biomass().","code":""},{"path":"https://cidree.github.io/silviculture/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"silviculture 0.2.0","text":"Fix error validator variable names silviculture::Inventory S7 class. biomass_models: failing “-” sign parsed em dash.","code":""},{"path":"https://cidree.github.io/silviculture/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"silviculture 0.2.0","text":"Prediction functions (silv_predict_*()) now common arguments, specific arguments depend model used specified function (e.g. silv_predict_height(model = eq_hd_aitor2025())). silv_volume(): assumed diameter meters. Now diameter must given centimeters. informing message added function. S7 silviculture::Inventory class now stores groups.","code":""},{"path":"https://cidree.github.io/silviculture/news/index.html","id":"deprecated-functions-0-2-0","dir":"Changelog","previous_headings":"","what":"Deprecated functions","title":"silviculture 0.2.0","text":"silv_diametric_class() deprecated favour silv_tree_dclass() silv_basal_area() deprecated favour silv_tree_basal_area() silv_stand_basal_area() silv_volume() deprecated favour silv_tree_volume() silv_dominant_height() deprecated favour silv_stand_dominant_height() silv_lorey_height() deprecated favour silv_stand_lorey_height() silv_sqrmean_diameter() deprecated favour silv_stand_qmean_diameter() silv_spacing_index() deprecated favour silv_density_hart() silv_ntrees_ha() deprecated favour silv_density_ntrees_ha() silv_biomass() deprecated favour silv_predict_biomass()","code":""},{"path":"https://cidree.github.io/silviculture/news/index.html","id":"silviculture-010","dir":"Changelog","previous_headings":"","what":"silviculture 0.1.0","title":"silviculture 0.1.0","text":"CRAN release: 2025-05-29 Initial CRAN submission.","code":""}]
